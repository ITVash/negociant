generator client {
  provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
    //url = "postgres://default:kxSPa4fM8dtg@ep-lingering-thunder-a23xphs1-pooler.eu-central-1.aws.neon.tech:5432/verceldb?sslmode=require&pgbouncer=true&connect_timeout=15"
    //directUrl = "postgres://default:kxSPa4fM8dtg@ep-lingering-thunder-a23xphs1.eu-central-1.aws.neon.tech:5432/verceldb?sslmode=require"
}
enum negoUserRole {
  ADMIN
  USER
  GUEST
}

model negoUser {
  id Int @id @default(autoincrement())
  
  id_tg Int
  first_name String
  last_name String
  username String
  photo_url String? @default("")
  role negoUserRole

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model negoWork {
  id Int @id @default(autoincrement())

  workDate DateTime
  workList negoWorkList[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum WorkListStatus {
  START
  PENDING
  END
}

model negoWorkList {
  id Int @id @default(autoincrement())

  organization Int
  contakts Int
  comment String
  purpose_trip String[]

  status WorkListStatus

  work negoWork @relation(fields: [negoWorkId], references: [id])
  negoWorkId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model negoOrganization {
  id Int @id @default(autoincrement())

  name String
  contakts negoContakts[]
  address String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model negoContakts {
  id Int @id @default(autoincrement())

  name String
  phone String

  organization negoOrganization? @relation(fields: [organizationId], references: [id])
  organizationId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
